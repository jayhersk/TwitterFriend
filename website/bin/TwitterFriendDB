#!/bin/bash

# Stop on errors
set -e

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|random|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create") # Create database
    if [ -e var/TwitterFriend.sqlite3 ]
    then
      echo "Error: database already exists"
    else
      echo "+ mkdir -p var"
      mkdir -p var
      echo "+ sqlite3 var/TwitterFriend.sqlite3 < sql/schema.sql"
      sqlite3 var/TwitterFriend.sqlite3 < sql/schema.sql
    fi
    ;;

  "create-dummy") # Create database and fill with dummy data for testing
    if [ -e var/TwitterFriend.sqlite3 ]
    then
      echo "Error: database already exists"
    else
      echo "+ mkdir -p var"
      mkdir -p var
      echo "+ sqlite3 var/TwitterFriend.sqlite3 < sql/schema.sql"
      sqlite3 var/TwitterFriend.sqlite3 < sql/schema.sql
      echo "+ sqlite3 var/TwitterFriend.sqlite3 < sql/data.sql"
      sqlite3 var/TwitterFriend.sqlite3 < sql/data.sql
    fi
    ;;

  "destroy")
    echo "+ rm -rf var/TwitterFriend.sqlite3"
    rm -rf var/TwitterFriend.sqlite3 var
    ;;

  "reset")
    echo "+ rm -rf var/TwitterFriend.sqlite3"
    rm -rf var/TwitterFriend.sqlite3 var
    echo "+ mkdir -p var"
    mkdir -p var
    echo "+ sqlite3 var/TwitterFriend.sqlite3 < sql/schema.sql"
    sqlite3 var/TwitterFriend.sqlite3 < sql/schema.sql

    # Copy dummy data
    # echo "+ sqlite3 var/TwitterFriend.sqlite3 < sql/data.sql"
    # sqlite3 var/TwitterFriend.sqlite3 < sql/data.sql
    ;;

  *)
    usage
    exit 1
    ;;
esac